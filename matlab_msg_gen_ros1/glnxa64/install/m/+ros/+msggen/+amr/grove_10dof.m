
classdef grove_10dof < ros.Message
    %grove_10dof MATLAB implementation of amr/grove_10dof
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'amr/grove_10dof' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '7cd7611c13f25aa6605cfb4b00507029' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'StateConnect' 'GyroVal' 'AccelVal' 'MagVal' 'Temp' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'state_connect' 'gyro_val' 'accel_val' 'mag_val' 'temp' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        StateConnect
        GyroVal
        AccelVal
        MagVal
        Temp
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'grove_10dof', 'Header')
            obj.Header = val;
        end
        function set.StateConnect(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'grove_10dof', 'StateConnect');
            obj.StateConnect = logical(val);
        end
        function set.GyroVal(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'grove_10dof', 'GyroVal');
            obj.GyroVal = double(val);
        end
        function set.AccelVal(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'grove_10dof', 'AccelVal');
            obj.AccelVal = double(val);
        end
        function set.MagVal(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'grove_10dof', 'MagVal');
            obj.MagVal = double(val);
        end
        function set.Temp(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'grove_10dof', 'Temp');
            obj.Temp = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.amr.grove_10dof.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.amr.grove_10dof;
            obj.reload(strObj);
        end
    end
end
