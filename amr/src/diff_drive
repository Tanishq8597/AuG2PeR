#! /usr/bin/env python3

import rospy
from sensor_msgs.msg import Joy
from geometry_msgs.msg import Twist

diameter = 166e-3 #m
max_velocity = 2 #m/s
dt = 1/150
last_msg = 0


def Node_Setup():
    rospy.init_node("Joystick",anonymous=True)
    rospy.Subscriber("joy",Joy,JoystickCB)
    rospy.spin()


def JoystickCB(msg):
    cmd_vel_pub = rospy.Publisher("cmd_vel",Twist,queue_size=1)
    last_msg = rospy.get_time()
    vel_msg = Twist()
    vel_msg.linear.x = msg.axes[1]*max_velocity
    vel_msg.angular.z = -msg.axes[3]*max_velocity
    e_stop = msg.buttons[0] 
    if e_stop:
        vel_msg.linear.x = 0
        vel_msg.angular.z = 0

    cmd_vel_pub.publish(vel_msg)
    # rospy.loginfo("throtle_reading = %f \nyaw_reading = %f\n"%(throtle,yaw))


if __name__ == '__main__': 
    try:    

        Node_Setup()
        rospy.Rate(100).sleep()
        # rospy.Rate(10000).sleep()
    #     while not rospy.is_shutdown(): rate.sleep()
    except rospy.ROSInterruptException:
        pass